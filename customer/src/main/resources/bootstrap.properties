spring.profiles.active=${build.profile.id}
server.port=8181
spring.application.name=customer-service
spring.cloud.nacos.config.group=MICROSERVICE
spring.cloud.nacos.config.server-addr=nacos.diligrp.com:8848
spring.cloud.nacos.config.namespace=54c39cfe-d1c4-4022-a94b-a3486c5927fc

#\u662F\u5426\u9700\u8981\u6CE8\u518C\u5230nacos
spring.cloud.nacos.discovery.register-enabled=true

######################## \u4EE5\u4E0B\u4E3A\u9ED8\u8BA4\u914D\u7F6E\uFF0C\u5982\u6709\u4E0D\u540C\uFF0C\u9700\u8981\u5728nacos\u4E0A\u5BF9\u5E94\u7684\u73AF\u5883\u914D\u7F6E\u6587\u4EF6\u4E2D\u8986\u76D6\u914D\u7F6E #################################
#\u542F\u7528\u6027\u80FD\u7EDF\u8BA1
performance.enable=true
manage.enable=false
#beetl
beetl.enable=true
quartz.enabled=false
#druid\u76D1\u63A7
druidFilter.enable=false
web.enable=false

#mysql
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.maxActive=20
spring.datasource.druid.initialSize=1
spring.datasource.druid.maxWait=60000
spring.datasource.druid.minIdle=1
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=select 1
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxOpenPreparedStatements=20
spring.datasource.druid.filters=stat,slf4j,wall
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#mybatis
mybatis.mapperLocations=classpath*:mapper/*.xml
mybatis.typeAliasesPackage=com.dili.customer.domain
mybatis.configLocation=classpath:conf/mybatis-config.xml

#mybatis mapper
mapper.mappers[0]=com.dili.ss.base.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL
mapper.enable-method-annotation=true
#mybatis pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

#spring cloud
spring.cloud.nacos.discovery.group=MICROSERVICE
spring.cloud.nacos.discovery.namespace=54c39cfe-d1c4-4022-a94b-a3486c5927fc
management.endpoints.web.exposure.include=*

#logback
logging.config=classpath:conf/logback-springboot.xml
web.instanceResolver=true

#\u662F\u5426\u5F00\u542Fp6spy\u65E5\u5FD7\u8F93\u51FA
decorator.datasource.p6spy.enable-logging=false
decorator.datasource.enabled=false

#log\u65E5\u5FD7\u5B58\u653E\u7684\u6700\u5927\u5386\u53F2\u5929\u6570
log.maxHistory=5

#redis \u542F\u7528
redis.enable=true
#redis
spring.redis.port=6379
spring.redis.database=2
spring.cache.redis.use-key-prefix=true

spring.redis.timeout=1000ms
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5 \u9ED8\u8BA4 8
spring.redis.lettuce.pool.max-idle=8
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5 \u9ED8\u8BA4 0
spring.redis.lettuce.pool.min-idle=0
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09 \u9ED8\u8BA4 8
spring.redis.lettuce.pool.max-active=8
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09 \u9ED8\u8BA4 -1
spring.redis.lettuce.pool.max-wait=-1

uap.contextPath=http://uap.diligrp.com

# \u540C\u4E00\u624B\u673A\u53F7\u5141\u8BB8\u6CE8\u518C\u7684\u5BA2\u6237\u6570\u4E0A\u9650
dili.customer.phone.limit=10

# Sentinel\u81EA\u52A8\u5316\u914D\u7F6E\u662F\u5426\u751F\u6548
spring.cloud.sentinel.eager=true
# \u5E94\u7528\u4E0ESentinel\u63A7\u5236\u53F0\u4EA4\u4E92\u7684\u7AEF\u53E3\uFF0C\u5E94\u7528\u672C\u5730\u4F1A\u8D77\u4E00\u4E2A\u8BE5\u7AEF\u53E3\u5360\u7528\u7684HttpServer
spring.cloud.sentinel.transport.port=8202

# \u5C0F\u7A0B\u5E8F\u7CFB\u7EDF\u53CA\u7F16\u7801\u6620\u5C04appid \u914D\u7F6E
dili.wechat.applet={"TRACE#DRIVER":"wxdd7397bf57ef8ade","TRACE#BUYERANDSELLER":"wxe08c9b2b40546ebd"}

##\u5BA2\u6237\u9ED8\u8BA4\u521D\u59CB\u7684\u7EA7\u522B\uFF0C\u6709\u7279\u6B8A\u914D\u7F6E\u7684\uFF0C\u6309\u7279\u6B8A\u914D\u7F6E\uFF0C\u5982\u65E0\uFF0C\u5219\u9ED8\u8BA4\u4E3A\u666E\u901A\u5BA2\u6237\uFF0Ckey\u4E3A\u5E02\u573Aid\uFF0Cvalue\u4E3A\u7EA7\u522B\u53F7
dili.customer.init.market.grade={8:0}

# \u5F00\u542FMQ\u53D1\u9001\u786E\u8BA4
spring.rabbitmq.publisher-confirm-type=correlated
# \u5F00\u542FMQ\u53D1\u9001\u5931\u8D25\u9000\u56DE
spring.rabbitmq.publisher-returns=true